@using StudentRegistrationWeb.Extension
@using StudentRegistrationWeb.LocalResources
@using StudentRegistrationWeb.Models
@model StudentRegistrationWeb.Models.StudentModel
@{
    ViewBag.Title = "Student List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<div class="row">

        <div class="col-12">
            <form action="@HtmlExtension.GetEncryptLink("GetStudentListSearch", "Student")" method="post" class="form-fileupload" id="fromearch">

                @Html.AntiForgeryToken()
                @if (!ViewContext.ViewData.ModelState.IsValid)
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                }
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-2" style="margin-left:40px">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StudentName)
                                    @Html.TextBoxFor(model => model.StudentName, new { @id = "txtStudentName", @class = "form-control", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-2" style="margin-left:40px">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StudentNumber)
                                    @Html.TextBoxFor(model => model.StudentNumber, new { @id = "txtStudentNo", @class = "form-control", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.StudentNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-2" style="margin-left:40px">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FatherName)
                                    @Html.TextBoxFor(model => model.FatherName, new { @id = "txtFatherName", @class = "form-control", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-2" style="margin-left:40px">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Phone)
                                    @Html.TextBoxFor(model => model.Phone, new { @id = "txtPhone", @class = "form-control", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-1" style="margin-left:40px">
                                <div class="form-group">
                                    <input type="submit" class="btn btn-primary" style="margin-top: 32px; margin-right: 15px" value="@Resource.Search" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>

    </div>*@
<div class="row">
    <div class="col-12">
        <div class="card">
            @*<div class="card-header">
                    <h3 class="card-title">DataTable with minimal features & hover style</h3>
                </div>*@
            <!-- /.card-header -->
            <div class="card-body">
                <div class="table-responsive">
                    <table id="myTable" class="table table-striped table-bordered" style="width:100%">
                        <thead class="tb-bg">
                            <tr>
                                <th></th>
                                <th>Student Id</th>
                                <th>Name</th>
                                <th>Father Name</th>
                                <th>NRC</th>
                                <th>Phone</th>
                                <th>Email</th>
                                @*<th>DOB</th>
                                    <th>Address</th>
                                    <th>University</th>
                                    <th>Major</th>
                                    <th>Academic Year</th>*@
                                <th style="width: 193px;">Action</th>

                            </tr>
                        </thead>
                        <tbody>

                            @if (ViewBag.StudentList != null)
                            {
                                foreach (var item in (List<StudentDTO>)ViewBag.StudentList)
                                {
                                    <tr>
                                        <td>@item.Id</td>
                                        <td>@item.StudentNo</td>
                                        <td>@item.Name</td>
                                        <td>@item.FatherName</td>
                                        <td>@item.NRC</td>
                                        <td>@item.Phone</td>
                                        <td>@item.Email</td>
                                        @*<td>01-02-2000</td>
                                            <td>Yangon</td>
                                            <td>Computer University</td>
                                            <td>CS</td>
                                            <td>1st year</td>*@
                                        <td style="width: 193px;">
                                            <button type="button" id="btnApprove" class="btn btn-success" onclick="getUpdate(@item.Id)">@*@Resource.*@Edit</button>
                                            <button type="button" id="btnReject" class="btn btn-danger" onclick="getDelete(@item.Id)">@*@Resource.*@Delete</button>
                                            <button type="button" id="btnDetails" class="btn btn-default" onclick="getDetails(@item.Id)">@*@Resource.*@Detail</button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>
<div class="row">
    <form action="@HtmlExtension.GetEncryptLink("StudentUpdateByStudentId", "Student")" method="post" class="form-horizontal" , role="form" id="formUpdate">
        @Html.HiddenFor(model => model.idString, new { @id = "updateId" })
    </form>
    <form action="@HtmlExtension.GetEncryptLink("StudentDeleteByStudentId", "Student")" method="post" class="form-horizontal" , role="form" id="formDelete">
        @Html.HiddenFor(model => model.idString, new { @id = "deleteId" })
    </form>
    <form action="@HtmlExtension.GetEncryptLink("StudentDetail", "Student")" method="post" class="form-horizontal" , role="form" id="formDetail">
        @Html.HiddenFor(model => model.idString, new { @id = "detailsId" })
    </form>
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Information</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @ViewBag.Message
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var modalSuccess = "@Html.Raw(@ViewBag.IsSuccess)";
        if (modalSuccess == "success") {
           $('#myModal').modal('toggle');
           $('#myModal').modal('show');
        }
        if (modalSuccess == "fail") {
            $('#myModal').modal('toggle');
            $('#myModal').modal('show');
        }

        var buttonCommon = {
            exportOptions: {
                columns: ':visible',
                format: {
                    body: function (data, row, column, node) {
                        while (data.charAt(0) == '=') data = data.substring(1);
                        while (data.includes(">") || data.includes("<")) {
                            var startIndex = data.indexOf("<");
                            var endIndex = data.indexOf(">");
                            data = data.substring(0, startIndex) + data.substring(endIndex + 1, data.length);
                        }
                        return data.length > 0 ? '\'' + data.trim() : data;
                    }
                }
            }
        };
        var table = $('#myTable').DataTable({
            "columnDefs": [{
                "targets": [0],
                "orderable": false
            },
            {
                'targets': 0,
                'searchable': false,
                'orderable': false,
                'width': '1%',
                'className': 'dt-body-center',
                'render': function (data, type, full, meta) {
                    if (full[6] == 'Pending') {
                        return '<input type="radio" name="radio">';
                    }
                    else {
                        return '';
                    }
                }
            },
            {
                'targets': 0,
                'visible': false
            }
            ],
            dom: 'lBfrtip',
            buttons: [
                $.extend(true, {}, buttonCommon, {
                    extend: 'excel'
                }),
                $.extend(true, {}, buttonCommon, {
                    extend: 'csv'
                })
            ],
            'rowCallback': function (row, data, dataIndex) {

            },
            "order": [[1, 'asc']],
            "scrollCollapse": true,
        });
        var rows_selected = "";
        $('#myTable tbody').on('click', 'input[type="button"]', function (e) {
            var $row = $(this).closest('tr');
            var data = table.row($row).data();

            var rowId = data[0];
            var index = $.inArray(rowId, rows_selected);
            rows_selected = rowId;
            checkLength();
            e.stopPropagation();
        });

        $('#myTable').on('click', 'tbody td, thead th:first-child', function (e) {
            $(this).parent().find('input[type="button"]').trigger('click');
            checkLength();
        });

        table.on('draw', function () {
            updateDataTableSelectAllCtrl(table);
            checkLength();
        });

        function updateDataTableSelectAllCtrl(table) {
            var $table = table.table().node();
            var $chkbox_all = $('tbody input[type="button"]', $table);
            var $chkbox_checked = $('tbody input[type="button"]:checked', $table);
            var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

            if ($chkbox_checked.length === 0) {
                chkbox_select_all.checked = false;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

            } else if ($chkbox_checked.length === $chkbox_all.length) {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

            } else {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = true;
                }
            }
        }
    });

    function getUpdate(updateStudentId) {
        $("#updateId").val(updateStudentId);
        $('#formUpdate').submit();
    }
    function getDelete(deleteStudentId) {
        $("#deleteId").val(deleteStudentId);
        $('#formDelete').submit();
    }
    function getDetails(detailStudentId) {
        $("#detailsId").val(detailStudentId);
        $("#formDetail").submit();
    }

</script>
