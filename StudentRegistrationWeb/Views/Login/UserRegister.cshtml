@model StudentRegistrationWeb.ViewModel.UserViewModel
@using StudentRegistrationWeb.Extension
@{
    ViewBag.Title = "Student Detail";
    Layout = "~/Views/Shared/_UserRegisterLayout.cshtml";
}
@Scripts.Render("~/bundles/jquery")
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
<div class="m-xl-5"><h3 style="text-align:center">User Registration</h3></div>
<div class="col-4 offset-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                @*<div class="card-header">
                        <h3 class="card-title">DataTable with minimal features & hover style</h3>
                    </div>*@
                <!-- /.card-header -->
                <div class="card-body">
                    <form action="@HtmlExtension.GetEncryptLink("UserRegister", "Login")" method="post" class="form-horizontal" , role="form">
                        @Html.AntiForgeryToken()
                        @if (!ViewContext.ViewData.ModelState.IsValid)
                        {
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        }
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName)<br />
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", id = "userName", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FullName)<br />
                                    @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", id = "fullName", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email)<br />
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", id = "email", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password)<br />
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "password", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPassword)<br />
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", id = "confirmPassword", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="pull-right">
                                    <input type="button" id="btnCancel" class="btn btn-default" value="Cancel" />
                                    <input type="submit" id="btnSave" class="btn btn-primary" value="Save" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">User Registration</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @ViewBag.Message
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var modalSuccess = "@Html.Raw(@ViewBag.IsSuccess)";
        if (modalSuccess == "success") {
           $('#myModal').modal('toggle');
           $('#myModal').modal('show');
        }
        if (modalSuccess == "fail") {
            $('#myModal').modal('toggle');
            $('#myModal').modal('show');
        }
    });
    $('#btnCancel').click(function () {
        var _link = '@HtmlExtension.GetEncryptLink("Login", "Login")';
        window.location.href = _link;
    });

</script>