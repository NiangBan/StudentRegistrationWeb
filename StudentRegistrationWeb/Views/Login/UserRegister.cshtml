@model StudentRegistrationWeb.ViewModel.UserViewModel
@using StudentRegistrationWeb.Extension
@{
    ViewBag.Title = "Student Detail";
    Layout = "~/Views/Shared/_UserRegisterLayout.cshtml";
}
@Scripts.Render("~/bundles/jquery")
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
<div class="m-xl-5"><h3 style="text-align:center">User Registration</h3></div>
<div class="col-4 offset-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                @*<div class="card-header">
                        <h3 class="card-title">DataTable with minimal features & hover style</h3>
                    </div>*@
                <!-- /.card-header -->
                <div class="card-body">
                    <form action="@HtmlExtension.GetEncryptLink("SaveUser", "Login")" method="post" class="form-horizontal" , role="form" id="transferOwnForm">
                        @Html.AntiForgeryToken()
                        @if (!ViewContext.ViewData.ModelState.IsValid)
                        {
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        }
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName)<br />
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", id = "txtAmount1", @onkeypress = "return restrictAlphabetsAmount(this,event)", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FullName)<br />
                                    @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", id = "txtAmount1", @onkeypress = "return restrictAlphabetsAmount(this,event)", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email)<br />
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", id = "txtAmount1", @onkeypress = "return restrictAlphabetsAmount(this,event)", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password)<br />
                                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control", id = "txtAmount1", @onkeypress = "return restrictAlphabetsAmount(this,event)", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPassword)<br />
                                    @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control", id = "txtAmount1", @onkeypress = "return restrictAlphabetsAmount(this,event)", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="pull-right">
                                    <input type="button" class="btn btn-default" onclick="" value="Cancel" />
                                    <input type="submit" id="btnSave" class="btn btn-primary" value="Save" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
    </div>
</div>